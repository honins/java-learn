@startmindmap
* 递归
** 去的过程叫“递”，回的过程叫“归”
** 递归需要满足的条件
*** 一个问题的解可以分解成几个子问题的解
*** 这个问题和分解之后的子问题，除了数据规模不同，求解思路完全一致
*** 存在递归终止条件
** 如何编写递归代码
*** **写出递推公式，找到终止条件**
** *写递归代码的关键就是找到如何将大问题分解为小问题的规律，并且基于此写出递推公式，然后再推敲终止条件，最后将递推公式和终止条件翻译成代码。
** *编写递归代码的关键是，只要遇到递归，我们就把它抽象成一个递推公式，不用想一层层的调用关系，不要试图用人脑去分解递归的每个步骤。
** 递归代码要警惕堆栈溢出
** 递归代码要警惕重复计算（可使用散列表保存部分结果）
@endmindmap